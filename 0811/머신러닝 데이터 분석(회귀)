{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"머신러닝 데이터 분석(회귀)","private_outputs":true,"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNq6qUP19RW/k+xqady34kB"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"QB34vBp-3bbt"},"source":["# 한글 폰트 설치\n","!apt-get update -qq\n","!apt-get install fonts-nanum* -qq"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_9I0EF6B3ixN"},"source":["import numpy as np\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt\n","import scipy.stats\n","import matplotlib.font_manager as fm\n","\n","fontpath = '/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf'\n","font = fm.FontProperties(fname=fontpath, size=9)\n","fm._rebuild()\n","# 그래프에 retina display 적용\n","%config InlineBackend.figure_format = 'retina'\n","# Colab 의 한글 폰트 설정\n","plt.rc('font', family='NanumBarunGothic') \n","mpl.rcParams['axes.unicode_minus'] = False # minus 기호 사용"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"iBW7uA_c4Yh4"},"source":["# 데이터 준비\n","data = np.random.randint(-200, 100, 50).cumsum()\n","# 한글\n","plt.figure(figsize=(10, 8))\n","plt.plot(range(50), data, 'r')\n","plt.title('시간별 가격추이')\n","plt.ylabel('주식가격')\n","plt.xlabel('시간(분)')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GqzpcA31JR_x"},"source":["EDA(Explotary Data Analysis)"]},{"cell_type":"code","metadata":{"id":"un1-XQQ95zUV"},"source":["from google.colab import files\n","uploaded=files.upload()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MMNDCwr94jHe"},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","# read_csv 함수로 df생성\n","df_auto = pd.read_csv('/content/auto-mpg.csv', header=None) # 원하는 파일 우클릭 후 경로복사하면 쉽게 복붙 가능\n","# 열 이름 지정\n","df_auto.columns=['연비(mpg)', '실린더 수', '배기량', '출력', '차중', '가속능력', '출시년도', '제조국', '모델명']\n","df_auto.head()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"h9vRt1Kj_xkT"},"source":["데이터 탐색"]},{"cell_type":"code","metadata":{"id":"UToEIHFb4jD2"},"source":["# 데이터 자료형 확인\n","df_auto.info()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zgPGppkY4i-W"},"source":["# 데이터 통계 요약정보 확인\n","df_auto.describe()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"1CfHg87iAfLp"},"source":["# 출력 열의 자료형 변경 (문자열 -> 숫자)\n","df_auto['출력'].unique()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rc64FjjIAfEw"},"source":["df_auto['출력'].replace('?', np.nan, inplace=True) # '?'을 np.nan 으로 변경\n","df_auto.dropna(subset=['출력'], axis=0, inplace=True) # 누락데이터 행을 삭제\n","df_auto['출력'] = df_auto['출력'].astype('float') # 문자열을 실수형으로 변환"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"sigyXZXHAe9c"},"source":["df_auto['출력'].isnull().sum()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"AzK90jBYDV5G"},"source":["## 단순회귀분석\n","- 어떤 독립 변수(X)가 종속 변수(Y)에 영향을 준다면 두 변수 사이에 선형 관계가 있다고 이야기 한다.\n","- 데이터 간의 선형 관계가 있다면 새로운 독립 변수(X)가 주어졌을 때 거기에 대응되는 종속 변수(Y)를 예측할 수 있다.\n","- 수학적으로 종속 변수(Y)와 독립변수(X) 사이의 관계를 1차 함수 Y=aX+b로 나타낸다"]},{"cell_type":"markdown","metadata":{"id":"DIuhW1hQDo7n"},"source":["속성 또는 선택"]},{"cell_type":"code","metadata":{"id":"681WODoR4i43"},"source":["# 분석에 활용할 열(속성)을 선택(연비, 실린더, 출력, 중량)\n","ndf = df_auto[['연비(mpg)', '실린더 수', '출력', '차중']]\n","ndf.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"heL31t_4C2bR"},"source":["## 종속 변수 Y인 '연비(mpg)'와 다른 변수 간의 선형관계를 그래프(산점도)로 확인\n","# Matplotlib으로 산점도 그리기\n","ndf.plot(kind='scatter', x='차중', y='연비(mpg)', c = 'coral', s=10, figsize=(10, 5))\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0x4bL2z7C2YU"},"source":["# Seaborn으로 산점도 그리기\n","fig = plt.figure(figsize=(10, 5))\n","ax1 = fig.add_subplot(1, 2, 1)\n","ax2 = fig.add_subplot(1, 2, 2)\n","sns.regplot(x='차중', y = '연비(mpg)', data=ndf, ax=ax1) # 회귀선 표시\n","sns.regplot(x='차중', y = '연비(mpg)', data=ndf, ax=ax2, fit_reg=False) # 회귀선 미표시\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_QMexHHDC2VO"},"source":["# seaborn 조인트 그래프 - 산점도, 히스토그램\n","sns.jointplot(x = '차중', y = '연비(mpg)', data=ndf) # 회귀선 없음\n","sns.jointplot(x = '차중', y = '연비(mpg)', kind='reg', data=ndf) # 회귀선 표시\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"QEm1GH7oC2Sd"},"source":["# seaborn pairplot으로 두 변수간의 모든 경우의 수 그리기\n","sns.pairplot(ndf)\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Yi-36foQZeE2"},"source":["## 선형회귀 분석\n","데이터셋 구분 - 훈련용(train data) / 검증용(test data)"]},{"cell_type":"code","metadata":{"id":"rQx0wjU3FTTF"},"source":["# 속성(변수) 선택\n","X = ndf[['차중']] # 독립변수 X\n","Y = ndf['연비(mpg)'] # 종속변수 Y"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YmE8p4JVX3Pt"},"source":["# train data와 test data로 구분(7:3 비율)\n","from sklearn.model_selection import train_test_split # 사이킷런 라이브러리\n","X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=10) # X : 독립변수 Y : 종속변수\n","                                                                                          # test_size : 검증(test_data) 비율 : 30% random_state : 랜덤 추출 값\n","print('train data 개수 : ', len(X_train))\n","print('test data 개수 : ', len(X_test))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ii2Am3urX2yB"},"source":["# sklearn 라이브러리에서 선형회귀분석 모듈 가져오기\n","from sklearn.linear_model import LinearRegression\n","\n","# 단순 회귀분석 모형 객체 생성\n","lr = LinearRegression()\n","\n","# train data를 가지고 모형 학습\n","lr.fit(X_train, y_train)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zD-khf76eZh6"},"source":["- R제곱은 바로 다른 말로는 설명력 혹은 결정계수 함.\n","- 독립변수가 종속변수에 대해 얼마만큼의 설명력을 가지게 되는지를 나타내는 수치\n","\n"]},{"cell_type":"code","metadata":{"id":"4-uz3IFRf9C3"},"source":["# 학습을 마친 모형에 test data를 적용하여 결정계수(R-제곱) 계산\n","r_square = lr.score(X_text, Y_test)\n","r_square"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jfI3E4KEf88A"},"source":["# 회귀식의 기울기(W)\n","print('기울기 a :', lr.coef_)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"yo-ImthbfhQo"},"source":["# 회귀식의 y절편\n","print('y절편 b', lr.intercept_)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"61d7vMG0fjYR"},"source":["# 모형에 전체 데이터를 입력하여 예측한 값 y_hat을 실제 값 y와 비교\n","y_hat = lr.predict(X_text)\n","y_hat"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"61w76DKsm77_"},"source":["df_y = pd.DataFrame({'y_hat':y_hat, 'y':y_test})\n","df_y"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dIwd7qcvbXHf"},"source":["plt.figure(figsize=(10, 5))\n","ax1 = sns.kdeplot(y_test, label='y_test')\n","ax2 = sns.kdeplot(y_hat, label='y_hat', ax=ax1)\n","plt.legend()\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kK_-eASIl57F"},"source":["((df_y['y_hat'] - df_y['y'])**2).mean()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"UZq_1zHxngF-"},"source":["## 비선형회귀 분석\n","- 단순\n","- 독립 변수 X와 종속변수 Y 사이에 선형 상관관계가 있지만, 직선보다 곡선으로 설명하는 것이 적합할 때는 회귀 분석은 부적합하다.\n","- 다항회귀 분석은 위 그림과 같이 2차함수 이상의 다항함수를 사용하여 두 변수 간의 선형 관계를 설명한다.\n","- 2차함수는 종속변수Y와 독립변수 X사이의 관계를 Y=zX<sup>2</sup> + bX + c로 표시하여 설명한다."]},{"cell_type":"markdown","metadata":{"id":"YLKKb2jyn55G"},"source":["데이터셋 구분 - 훈련용 / 검증용"]},{"cell_type":"code","metadata":{"id":"3DPFC__Cl54o"},"source":["# 속성(변수) 선택\n","X = ndf[['차중']] # 독립변수 X\n","Y = ndf['연비(mpg)'] # 종속변수 Y\n","\n","# train data와 test data로 구분(7:3 비율)\n","from sklearn.model_selection import train_test_split # 사이킷런 라이브러리\n","X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=10) # X : 독립변수 Y : 종속변수\n","                                                                                          # test_size : 검증(test_data) 비율 : 30% random_state : 랜덤 추출 값\n","print('train data 개수 : ', X_train.shape)\n","print('test data 개수 : ', X_test.shape)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"z6sEdbhwl5y_"},"source":["# sklearn 라이브러리에서 필요한 모듈 가져오기\n","from sklearn.linear_model import LinearRegression # 선형 회귀분석\n","from sklearn.preprocessing import PolynomialFeatures # 다항식 변환\n","\n","# 다항식 변환\n","poly = PolynomialFeatures(degree=2)\n","X_train_poly = poly.fit_transform(X_train)\n","print('원 데이터 : ', X_train.shape)\n","print('2차항 변환 데이터 : ', X_train_poly.shape)\n","print('원 데이터 : ', X_train)\n","print('2차항 변환 데이터 : ', X_train_poly)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ynKdYuPMl5ww"},"source":["# train data를 가지고 모형 학습\n","pr = LinearRegression()\n","pr.fit(X_train_poly, y_train)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2TwT_bcrbXFP"},"source":["X_test_poly = poly.fit_transform(X_test) # X_train 데이터를 2차항으로 변형\n","\n","# 학습을 마친 모형에 test data를 적용하여 결정계수(R-제곱) 계산\n","r_square = pr.score(X_test_poly, y_test)\n","r_square"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"h2Cg9QtObXC4"},"source":["# train data의 산점도와 test data로 예측한 회귀선을 그래프로 출력\n","y_hat = pr.predict(X_test_poly)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"e3dfxNPqrDmS"},"source":["df_y_test = pd.DataFrame({'y_hat':y_hat, 'y':y_test})\n","df_y_test['차이']=df_y_test['y_hat']-df_y['y']\n","df_y_test"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"9vBYLO6NrZ5z"},"source":["fig = plt.figure(figsize=(10,5))\n","ax = fig.add_subplot(1, 1, 1)\n","ax.plot(X_train, y_train, 'o', label = 'Train Data') # 데이터 분포\n","ax.plot(X_test, y_hat, 'r+', label = 'Predicted Value') # 모형이 학습한 회귀선\n","ax.legend(loc='best')\n","plt.xlabel('차중')\n","plt.ylabel('연비(mpg)')\n","plt.show()\n","plt.close()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"n-9lG6WdsKca"},"source":["# 모형에 전체 X 데이터를 입력하여 예측한 값 y_hat을 실제 값 y와 비교\n","X_poly = poly.fit_transform(X)\n","y_hat = pr.predict(X_poly)\n","\n","plt.figure(figsize=(10, 5))\n","ax1 = sns.kdeplot(y, label='y')\n","ax2 = sns.kdeplot(y_hat, label='y_that', ax = ax1)\n","plt.legend()\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"m9YlYiSGwlTd"},"source":["(df_y_test['y_hat']**2 + df_y_test['y']**2).mean()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"EhaZ2YOIu2c6"},"source":["## 다중회귀 분석\n","데이터셋 구분 - 훈련용 / 검증용\n"]},{"cell_type":"code","metadata":{"id":"ZTJYt5wWvyYK"},"source":["# 속성(변수) 선택\n","X = ndf[['실린더 수', '출력', '차중']] # 독립변수 X\n","Y = ndf['연비(mpg)'] # 종속변수 Y\n","\n","# train data와 test data로 구분(7:3 비율)\n","from sklearn.model_selection import train_test_split # 사이킷런 라이브러리\n","X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=10) # X : 독립변수 Y : 종속변수\n","                                                                                          # test_size : 검증(test_data) 비율 : 30% random_state : 랜덤 추출 값\n","print('train data 개수 : ', X_train.shape)\n","print('test data 개수 : ', X_test.shape)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6SKs9ZsGwDxn"},"source":["# sklearn 라이브러리에서 선형회귀분석 모듈 가져오기\n","from sklearn.linear_model import LinearRegression\n","\n","# 회귀분석 모형 객체 생성\n","lr = LinearRegression()\n","\n","# train data를 가지고 모형 학습\n","lr.fit(X_train, y_train)\n","\n","# 학습을 마친 모형에 test data를 적용하여 결정계수 계산\n","r_square = lr.score(X_test, y_test)\n","r_square"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YvmQnggcvySQ"},"source":["# 회귀식의 기울기\n","print('X 변수의 계수 a : ', lr.coef_)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"F3Cd5zxAsKR3"},"source":["# 회귀식의 y절편\n","print('상수항 b', lr.intercept_)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uPVm9fHI0AP8"},"source":["# 모형에 전체 X_test 데이터를 입력하여 예측한 값 y_hat을 실제 값 y와 비교\n","y_hat = lr.predict(X_test)\n","y_hat"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"wLjdUzoM0AND"},"source":["df_y = pd.DataFrame({'y_hat':y_hat, 'y':y_test})\n","df_y"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Vkw_JIw60AKK"},"source":["# train data 산점도와 test data로 예측한 회귀선을 그래프로 출력\n","y_hat = lr.predict(X_test)\n","\n","plt.figure(figsize=(10,5))\n","ax1 = sns.kdeplot(y_test, label='y_test')\n","ax2 = sns.kdeplot(y_hat, label='y_hat', ax = ax1)\n","plt.legend()\n","plt.show()\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2ho7Qxz12LN0"},"source":[""],"execution_count":null,"outputs":[]}]}