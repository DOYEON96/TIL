{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"KNN최근접이웃","private_outputs":true,"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyObO5fLBTXwkdjMWNxtoZAc"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"1TA5-t6t0Sd_"},"source":["KNN\n","\n","[step 1] 데이터 준비/ 기본설"]},{"cell_type":"code","metadata":{"id":"qwprOns10maf"},"source":["# 데이터 살펴보기\n","df.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Zm6Aw9bk0YwX"},"source":["# 기본 라이브러리\n","import pandas as pd\n","import seaborn as sns\n","\n","# load_dataset 함수를 사용하여 데이터프레임으로 변환\n","df = sns.load_dataset('titanic')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JK4wR6af0oZy"},"source":["df['alone'].unique()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"l4ma-FUv4Jwr"},"source":["df.info()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"tZShIcWC4WSi"},"source":["0: survived: 생존 여부 => 0 = No, 1 = Yes\n","\n","1: pclass: 티켓 등급 => 1 = 1st, 2 = 2nd, 3 = 3rd\n","\n","2: sex: 성별\n","\n","3: age: 나이\n","\n","4: sibsp: 함께 탑승한 형제자매, 배우자의 수\n","\n","5: parch: 함께 탑승한 부모, 자식의 수\n","\n","6: fare: 운임\n","\n","7: embarked: 탑승 항구 => C = Cherbourg, Q = Queenstown, S = Southampton\n","\n","8: class: 객실 등급\n","\n","9: who: 남자/여자/아이\n","\n","10: adult_male: 성인 남성\n","\n","11: deck: 객실 데크 위치\n","\n","12: embark_town: 승선 도시\n","\n","13: alive: 생존 여부\n","\n","14: alone: 동행자 여부\n"]},{"cell_type":"code","metadata":{"id":"aduLY-4B4Xol"},"source":["# NAN 값이 많은 deck 열을 삭제, embarked와 내용이 겹치는 embark_town 열을 삭제\n","rdf = df.drop(['deck', 'embark_town'], axis=1)\n","rdf.columns.values"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kSaclmSh4Xml"},"source":["# age열에 나이 데이터가 없는 모든 행을 삭제 - age 열(891개 중 177개의 NaN 값)\n","rdf = rdf.dropna(subset=['age'], how='any', axis=0)\n","rdf.info()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"y7w-QYAN6NyH"},"source":["rdf['embarked'].unique()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"PVQFudAH4XkD"},"source":["# embarked 열의 NaN값을 승선도시 중에서 가장 많이 출현한 값으로 치환하기\n","most_freq = rdf['embarked'].value_counts(dropna=True).idxmax()\n","most_freq"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"V7y3Qsyk8BM5"},"source":["rdf['embarked'].fillna(most_freq, inplace = True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6SUVPjE64Xho"},"source":["rdf.describe(include='all')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GSlyuHAU8Iay"},"source":["# 분석에 활용할 열(속성)을 선택\n","ndf = rdf[['survived', 'pclass', 'sex', 'age', 'sibsp', 'parch', 'embarked']]\n","ndf.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"DjqTe4n0-Ivj"},"source":["ndf.info()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"FCvkpkmP-Loo"},"source":["# 원핫인코딩 - 범주형 데이터를 모형이 인식할 수 있도록 숫자형으로 변환\n","onehot_sex = pd.get_dummies(ndf['sex'])\n","onehot_sex.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"P1tZycDy_U4v"},"source":["ndf = pd.concat([ndf, onehot_sex], axis=1)\n","ndf.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"1HIFKA5c-LmK"},"source":["onehot_embarked = pd.get_dummies(ndf['embarked'], prefix='town')\n","onehot_embarked.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"TGUHZKIW-LjG"},"source":["ndf = pd.concat([ndf, onehot_embarked], axis=1)\n","ndf.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"EYPWSIFKB5n3"},"source":["ndf.drop(['sex', 'embarked'], axis=1, inplace=True)\n","ndf.head()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ua_aBtenH1NR"},"source":["[step 4]\n","\n","데이터셋 구분 - 훈련용/ 검증용"]},{"cell_type":"code","metadata":{"id":"XIh2V-v3-LgL"},"source":["# 속성(변수) 선택\n","X = ndf[list(ndf.columns)[1:]] # 독립변수 X\n","y = ndf[list(ndf.columns)[0]]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"nQcfSwZ0IC3F"},"source":["X.shape"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"9lNHYm7rIXus"},"source":["y.shape"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"xTIhxf1cIauP"},"source":["# 설명변수 데이터를 정규화(normalization)\n","from sklearn import preprocessing\n","X=preprocessing.StandardScaler().fit(X).transform(X)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UI7_ZOIiIkaa"},"source":["# train data 와 test data로 구분(7 : 3비율)\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=10)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hZU29xjKI9r5"},"source":["print('train data 개수 : ', X_train.shape)\n","print('test data 개수: ', X_test.shape)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"KmmgAXzEJ7Hl"},"source":["[step 5]\n","\n","KNN분류모형 - sklearn 사용"]},{"cell_type":"code","metadata":{"id":"LsHJ9X2SJ6Ba"},"source":["X_train"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3qrwMcuPKA3d"},"source":["# sklearn 라이브러리에서 KNN분류 모형 가져오기\n","from sklearn.neighbors import KNeighborsClassifier\n","\n","# 모형 객체 생성 (k=5로 설정)\n","knn = KNeighborsClassifier(n_neighbors=5)\n","\n","# train data를 가지고 모형 학습\n","knn.fit(X_train, y_train)\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Bj08Spm7KruU"},"source":["# test data를 가지고 y_hat을 예측 (분류)\n","y_hat = knn.predict(X_test)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"bVKRzmg4Kw3a"},"source":["import pandas as pd\n","df = pd.DataFrame({'y_hat':y_hat, 'y':y_test})"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4qLv_muuLkP1"},"source":["df.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LXrAocWbLw22"},"source":["df['차이'] = df['y_hat'] == df['y']\n","df.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"trCA48HFMAD8"},"source":["len(df)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"WSOGt1J_MDT6"},"source":["print('오답 수 : ', len(df) - sum(df['차이']))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6ws3HBeFMWI0"},"source":["# 모형 성능 평가 - Confusuion Matrix 계산\n","from sklearn import metrics\n","knn_matrix = metrics.confusion_matrix(y_test, y_hat)\n","knn_matrix"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zsmjtSfEOCu5"},"source":["# 모형 성능 평가 - 평가지표 계산\n","knn_report = metrics.classification_report(y_test, y_hat)\n","print(knn_report)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Au2-mo1TC4Zg"},"source":[""],"execution_count":null,"outputs":[]}]}